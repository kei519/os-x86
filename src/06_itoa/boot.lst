     1                                  	BOOT_LOAD	equ	0x7C00		; ブートプログラムのロード位置
     2                                  
     3                                  	ORG	BOOT_LOAD
     4                                  
     5                                  ; マクロ
     6                                  %include	"../include/macro.s"
     1                              <1> %macro	cdecl 1-*.nolist
     2                              <1> 	%rep	%0 - 1
     3                              <1> 		push	%{-1:-1}
     4                              <1> 		%rotate	-1
     5                              <1> 	%endrep
     6                              <1> 	%rotate	-1
     7                              <1> 	call	%1
     8                              <1> 	add	sp, (__BITS__ >> 3) * (%0 - 1)
     9                              <1> %endmacro
     7                                  
     8                                  ; エントリポイント
     9                                  entry:
    10 00000000 EB58                    	jmp	ipl
    11                                  
    12                                  	;BPM (Boot Parameter Block)
    13 00000002 90<rept>                	times	90 - ($ - $$) db 0x90
    14                                  
    15                                  	;IPL (Initial Program Loader)
    16                                  
    17                                  ipl:
    18 0000005A FA                      	cli					; 割り込み禁止
    19                                  
    20 0000005B B80000                  	mov	ax, 0
    21 0000005E 8ED8                    	mov	ds, ax
    22 00000060 8EC0                    	mov	es, ax
    23 00000062 8ED0                    	mov	ss, ax
    24 00000064 BC007C                  	mov	sp, BOOT_LOAD
    25                                  
    26 00000067 FB                      	sti					; 割り込み許可
    27                                  
    28 00000068 8816[4801]              	mov	[BOOT.DRIVE], dl
    29                                  
    30                                  	; 文字列を表示
    31 0000006C 68[3001]E8D80083C4-     	cdecl	puts, .s0
    31 00000074 02                 
    32                                  
    33                                  	; 数値を表示
    34 00000075 6A016A0A6A0868-         	cdecl	itoa,  8086, .s1, 8, 10, 0b0001	; "    8086"
    34 0000007C [3D01]68961FE8E500-
    34 00000084 83C40A             
    35 00000087 68[3D01]E8BD0083C4-     	cdecl	puts, .s1
    35 0000008F 02                 
    36                                  
    37 00000090 6A036A0A6A0868-         	cdecl	itoa,  8086, .s1, 8, 10, 0b0011	; "+   8086"
    37 00000097 [3D01]68961FE8CA00-
    37 0000009F 83C40A             
    38 000000A2 68[3D01]E8A20083C4-     	cdecl	puts, .s1
    38 000000AA 02                 
    39                                  
    40 000000AB 6A016A0A6A0868-         	cdecl	itoa, -8086, .s1, 8, 10, 0b0001	; "-   8086"
    40 000000B2 [3D01]686AE0E8AF00-
    40 000000BA 83C40A             
    41 000000BD 68[3D01]E8870083C4-     	cdecl	puts, .s1
    41 000000C5 02                 
    42                                  
    43 000000C6 6A016A0A6A0868-         	cdecl	itoa,    -1, .s1, 8, 10, 0b0001	; "-      1"
    43 000000CD [3D01]6AFFE8950083-
    43 000000D5 C40A               
    44 000000D7 68[3D01]E86D0083C4-     	cdecl	puts, .s1
    44 000000DF 02                 
    45                                  
    46 000000E0 6A006A0A6A0868-         	cdecl	itoa,    -1, .s1, 8, 10, 0b0000	; "   65535"
    46 000000E7 [3D01]6AFFE87B0083-
    46 000000EF C40A               
    47 000000F1 68[3D01]E8530083C4-     	cdecl	puts, .s1
    47 000000F9 02                 
    48                                  
    49 000000FA 6A006A106A0868-         	cdecl	itoa,    -1, .s1, 8, 16, 0b0000	; "    FFFF"
    49 00000101 [3D01]6AFFE8610083-
    49 00000109 C40A               
    50 0000010B 68[3D01]E8390083C4-     	cdecl	puts, .s1
    50 00000113 02                 
    51                                  
    52 00000114 6A046A026A0868-         	cdecl	itoa,    12, .s1, 8,  2, 0b0100	; "00001100"
    52 0000011B [3D01]6A0CE8470083-
    52 00000123 C40A               
    53 00000125 68[3D01]E81F0083C4-     	cdecl	puts, .s1
    53 0000012D 02                 
    54                                  
    55 0000012E EBFE                    	jmp	$	; 無限ループ
    56                                  
    57                                  	; データ
    58 00000130 426F6F74696E672E2E-     .s0	db	"Booting...", 0x0A, 0x0D, 0
    58 00000139 2E0A0D00           
    59 0000013D 2D2D2D2D2D2D2D2D0A-     .s1	db	"--------", 0x0A, 0x0D, 0
    59 00000146 0D00               
    60                                  
    61                                  ALIGN 2, db 0
    62                                  BOOT:						; ブートドライブに関する情報
    63 00000148 0000                    .DRIVE		dw 0				; ドライブ番号
    64                                  
    65                                  ; モジュール
    66                                  %include	"../modules/real/puts.s"
     1                              <1> puts:	; void puts(str)
     2                              <1> 	; スタックフレームの構築
     3 0000014A 55                  <1> 	push	bp
     4 0000014B 89E5                <1> 	mov	bp, sp
     5                              <1> 
     6                              <1> 	; レジスタの保存
     7 0000014D 50                  <1> 	push	ax
     8 0000014E 53                  <1> 	push	bx
     9 0000014F 56                  <1> 	push	si
    10                              <1> 
    11                              <1> 	; 引数を取得
    12 00000150 8B7604              <1> 	mov	si, [bp + 4]
    13                              <1> 
    14                              <1> 	; 処理の開始
    15 00000153 B40E                <1> 	mov	ah, 0x0E		; テレタイプ式1文字出力
    16 00000155 BB0000              <1> 	mov	bx, 0x0000		; ページ番号と文字色を0に設定
    17 00000158 FC                  <1> 	cld				; DF(Direction Flag) = 0	ストリング命令で加算
    18                              <1> .10L:
    19 00000159 AC                  <1> 	lodsb				; al = [si]; si++;
    20                              <1> 
    21 0000015A 3C00                <1> 	cmp	al, 0
    22 0000015C 7404                <1> 	je	.10E
    23                              <1> 
    24 0000015E CD10                <1> 	int	0x10
    25 00000160 EBF7                <1> 	jmp	.10L
    26                              <1> .10E:
    27                              <1> 
    28                              <1> 	; レジスタの復帰
    29 00000162 5E                  <1> 	pop	si
    30 00000163 5B                  <1> 	pop	bx
    31 00000164 58                  <1> 	pop	ax
    32                              <1> 
    33                              <1> 	; スタックフレームの破棄
    34 00000165 89EC                <1> 	mov	sp, bp
    35 00000167 5D                  <1> 	pop	bp
    36                              <1> 
    37 00000168 C3                  <1> 	ret
    67                                  %include	"../modules/real/itoa.s"
     1                              <1> itoa:	; void itoa(num, buff, size, radix, flags)
     2                              <1> 	; スタックフレームの構築
     3 00000169 55                  <1> 	push	bp
     4 0000016A 89E5                <1> 	mov	bp, sp
     5                              <1> 
     6                              <1> 	; レジスタの保存
     7 0000016C 50                  <1> 	push	ax
     8 0000016D 53                  <1> 	push	bx
     9 0000016E 51                  <1> 	push	cx
    10 0000016F 52                  <1> 	push	dx
    11 00000170 56                  <1> 	push	si
    12 00000171 57                  <1> 	push	di
    13                              <1> 
    14                              <1> 	; 引数を取得
    15 00000172 8B4604              <1> 	mov	ax, [bp + 4]		; AX = num
    16 00000175 8B7606              <1> 	mov	si, [bp + 6]		; SI = buff
    17 00000178 8B4E08              <1> 	mov	cx, [bp + 8]		; CX = size
    18                              <1> 
    19 0000017B 89F7                <1> 	mov	di, si			; バッファの最後尾
    20 0000017D 01CF                <1> 	add	di, cx			; DI = buff + size - 1
    21 0000017F 4F                  <1> 	dec	di
    22                              <1> 
    23 00000180 8B5E0C              <1> 	mov	bx, word [bp + 12]	; BX = flags
    24                              <1> 
    25                              <1> 	; 符号付き判定
    26 00000183 F7C30100            <1> 	test	bx, 0b0001
    27 00000187 7408                <1> .10Q:	jz	.10E
    28 00000189 83F800              <1> 	cmp	ax, 0
    29 0000018C 7D03                <1> .12Q:	jge	.12E
    30 0000018E 83CB02              <1> 	or	bx, 0b0010
    31                              <1> .12E:
    32                              <1> .10E:
    33                              <1> 
    34                              <1> 	; 符号出力判定
    35 00000191 F7C30200            <1> 	test	bx, 0b0010
    36 00000195 7412                <1> .20Q:	jz	.20E
    37 00000197 83F800              <1> 	cmp	ax, 0
    38 0000019A 7D08                <1> .22Q:	jge	.22F
    39 0000019C F7D8                <1> 	neg	ax
    40 0000019E C7042D00            <1> 	mov	[si], word '-'
    41 000001A2 EB04                <1> 	jmp	.22E
    42                              <1> .22F:
    43 000001A4 C7042B00            <1> 	mov	[si], word '+'
    44                              <1> .22E:
    45 000001A8 49                  <1> 	dec	cx
    46                              <1> .20E:
    47                              <1> 
    48                              <1> 	; ASCII変換
    49 000001A9 8B5E0A              <1> 	mov	bx, [bp + 10]		; BX = radix
    50                              <1> .30L:
    51 000001AC BA0000              <1> 	mov	dx, 0
    52 000001AF F7F3                <1> 	div	bx
    53                              <1> 
    54 000001B1 89D6                <1> 	mov	si, dx
    55 000001B3 8A94[DD01]          <1> 	mov	dl, byte [.ascii + si]
    56                              <1> 
    57 000001B7 8815                <1> 	mov	[di], dl
    58 000001B9 4F                  <1> 	dec	di
    59                              <1> 
    60 000001BA 83F800              <1> 	cmp	ax, 0
    61 000001BD E0ED                <1> 	loopnz	.30L
    62                              <1> .30E:
    63                              <1> 
    64                              <1> 	; 空欄を埋める
    65 000001BF 83F900              <1> 	cmp	cx, 0
    66 000001C2 740F                <1> .40Q:	je	.40E
    67 000001C4 F6460C04            <1> 	test	[bp + 12], byte 0b0100
    68 000001C8 7404                <1> 	jz	.42Q
    69 000001CA B030                <1> 	mov	al, byte '0'
    70 000001CC EB02                <1> 	jmp	.42E
    71 000001CE B020                <1> .42Q:	mov	al, byte ' '
    72                              <1> .42E:
    73 000001D0 FD                  <1> 	std
    74 000001D1 F3AA                <1> 	rep stosb
    75                              <1> .40E:
    76                              <1> 
    77                              <1> 	; レジスタの復帰
    78 000001D3 5F                  <1> 	pop	di
    79 000001D4 5E                  <1> 	pop	si
    80 000001D5 5A                  <1> 	pop	dx
    81 000001D6 59                  <1> 	pop	cx
    82 000001D7 5B                  <1> 	pop	bx
    83 000001D8 58                  <1> 	pop	ax
    84                              <1> 
    85                              <1> 	; スタックフレームの破棄
    86 000001D9 89EC                <1> 	mov	sp, bp
    87 000001DB 5D                  <1> 	pop	bp
    88                              <1> 
    89 000001DC C3                  <1> 	ret
    90                              <1> 
    91 000001DD 303132333435363738- <1> .ascii	db	"0123456789ABCDEF", 0	; 変換テーブル
    91 000001E6 3941424344454600    <1>
    68                                  
    69                                  ; ブートフラグ
    70 000001EE 00<rept>                	times 510 - ($ - $$) db 0x00
    71 000001FE 55AA                    	db 0x55, 0xAA
