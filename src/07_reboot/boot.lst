     1                                  	BOOT_LOAD	equ	0x7C00		; ブートプログラムのロード位置
     2                                  
     3                                  	ORG	BOOT_LOAD
     4                                  
     5                                  ; マクロ
     6                                  %include	"../include/macro.s"
     1                              <1> ; Cの関数風に呼び出すマクロ
     2                              <1> %macro	cdecl 1-*.nolist
     3                              <1> 	%rep	%0 - 1
     4                              <1> 		push	%{-1:-1}
     5                              <1> 		%rotate	-1
     6                              <1> 	%endrep
     7                              <1> 	%rotate	-1
     8                              <1> 	call	%1
     9                              <1> 	%if 1 < %0
    10                              <1> 		add	sp, (__BITS__ >> 3) * (%0 - 1)
    11                              <1> 	%endif
    12                              <1> %endmacro
     7                                  
     8                                  ; エントリポイント
     9                                  entry:
    10 00000000 EB58                    	jmp	ipl
    11                                  
    12                                  	;BPM (Boot Parameter Block)
    13 00000002 90<rept>                	times	90 - ($ - $$) db 0x90
    14                                  
    15                                  	;IPL (Initial Program Loader)
    16                                  
    17                                  ipl:
    18 0000005A FA                      	cli					; 割り込み禁止
    19                                  
    20 0000005B B80000                  	mov	ax, 0
    21 0000005E 8ED8                    	mov	ds, ax
    22 00000060 8EC0                    	mov	es, ax
    23 00000062 8ED0                    	mov	ss, ax
    24 00000064 BC007C                  	mov	sp, BOOT_LOAD
    25                                  
    26 00000067 FB                      	sti					; 割り込み許可
    27                                  
    28 00000068 8816[8800]              	mov	[BOOT.DRIVE], dl
    29                                  
    30                                  	; 文字列を表示
    31 0000006C 68[7A00]E8180083C4-     	cdecl	puts, .s0
    31 00000074 02                 
    32                                  
    33 00000075 E8B600                  	cdecl	reboot
    34                                  
    35 00000078 EBFE                    	jmp	$	; 無限ループ
    36                                  
    37                                  	; データ
    38 0000007A 426F6F74696E672E2E-     .s0	db	"Booting...", 0x0A, 0x0D, 0
    38 00000083 2E0A0D00           
    39                                  
    40 00000087 00                      ALIGN 2, db 0
    41                                  BOOT:						; ブートドライブに関する情報
    42 00000088 0000                    .DRIVE		dw 0				; ドライブ番号
    43                                  
    44                                  ; モジュール
    45                                  %include	"../modules/real/puts.s"
     1                              <1> puts:	; void puts(str)
     2                              <1> 	; スタックフレームの構築
     3 0000008A 55                  <1> 	push	bp
     4 0000008B 89E5                <1> 	mov	bp, sp
     5                              <1> 
     6                              <1> 	; レジスタの保存
     7 0000008D 50                  <1> 	push	ax
     8 0000008E 53                  <1> 	push	bx
     9 0000008F 56                  <1> 	push	si
    10                              <1> 
    11                              <1> 	; 引数を取得
    12 00000090 8B7604              <1> 	mov	si, [bp + 4]
    13                              <1> 
    14                              <1> 	; 処理の開始
    15 00000093 B40E                <1> 	mov	ah, 0x0E		; テレタイプ式1文字出力
    16 00000095 BB0000              <1> 	mov	bx, 0x0000		; ページ番号と文字色を0に設定
    17 00000098 FC                  <1> 	cld				; DF(Direction Flag) = 0	ストリング命令で加算
    18                              <1> .10L:
    19 00000099 AC                  <1> 	lodsb				; al = [si]; si++;
    20                              <1> 
    21 0000009A 3C00                <1> 	cmp	al, 0
    22 0000009C 7404                <1> 	je	.10E
    23                              <1> 
    24 0000009E CD10                <1> 	int	0x10
    25 000000A0 EBF7                <1> 	jmp	.10L
    26                              <1> .10E:
    27                              <1> 
    28                              <1> 	; レジスタの復帰
    29 000000A2 5E                  <1> 	pop	si
    30 000000A3 5B                  <1> 	pop	bx
    31 000000A4 58                  <1> 	pop	ax
    32                              <1> 
    33                              <1> 	; スタックフレームの破棄
    34 000000A5 89EC                <1> 	mov	sp, bp
    35 000000A7 5D                  <1> 	pop	bp
    36                              <1> 
    37 000000A8 C3                  <1> 	ret
    46                                  %include	"../modules/real/itoa.s"
     1                              <1> itoa:	; void itoa(num, buff, size, radix, flags)
     2                              <1> 	; スタックフレームの構築
     3 000000A9 55                  <1> 	push	bp
     4 000000AA 89E5                <1> 	mov	bp, sp
     5                              <1> 
     6                              <1> 	; レジスタの保存
     7 000000AC 50                  <1> 	push	ax
     8 000000AD 53                  <1> 	push	bx
     9 000000AE 51                  <1> 	push	cx
    10 000000AF 52                  <1> 	push	dx
    11 000000B0 56                  <1> 	push	si
    12 000000B1 57                  <1> 	push	di
    13                              <1> 
    14                              <1> 	; 引数を取得
    15 000000B2 8B4604              <1> 	mov	ax, [bp + 4]		; AX = num
    16 000000B5 8B7606              <1> 	mov	si, [bp + 6]		; SI = buff
    17 000000B8 8B4E08              <1> 	mov	cx, [bp + 8]		; CX = size
    18                              <1> 
    19 000000BB 89F7                <1> 	mov	di, si			; バッファの最後尾
    20 000000BD 01CF                <1> 	add	di, cx			; DI = buff + size - 1
    21 000000BF 4F                  <1> 	dec	di
    22                              <1> 
    23 000000C0 8B5E0C              <1> 	mov	bx, word [bp + 12]	; BX = flags
    24                              <1> 
    25                              <1> 	; 符号付き判定
    26 000000C3 F7C30100            <1> 	test	bx, 0b0001
    27 000000C7 7408                <1> .10Q:	jz	.10E
    28 000000C9 83F800              <1> 	cmp	ax, 0
    29 000000CC 7D03                <1> .12Q:	jge	.12E
    30 000000CE 83CB02              <1> 	or	bx, 0b0010
    31                              <1> .12E:
    32                              <1> .10E:
    33                              <1> 
    34                              <1> 	; 符号出力判定
    35 000000D1 F7C30200            <1> 	test	bx, 0b0010
    36 000000D5 7412                <1> .20Q:	jz	.20E
    37 000000D7 83F800              <1> 	cmp	ax, 0
    38 000000DA 7D08                <1> .22Q:	jge	.22F
    39 000000DC F7D8                <1> 	neg	ax
    40 000000DE C7042D00            <1> 	mov	[si], word '-'
    41 000000E2 EB04                <1> 	jmp	.22E
    42                              <1> .22F:
    43 000000E4 C7042B00            <1> 	mov	[si], word '+'
    44                              <1> .22E:
    45 000000E8 49                  <1> 	dec	cx
    46                              <1> .20E:
    47                              <1> 
    48                              <1> 	; ASCII変換
    49 000000E9 8B5E0A              <1> 	mov	bx, [bp + 10]		; BX = radix
    50                              <1> .30L:
    51 000000EC BA0000              <1> 	mov	dx, 0
    52 000000EF F7F3                <1> 	div	bx
    53                              <1> 
    54 000000F1 89D6                <1> 	mov	si, dx
    55 000000F3 8A94[1D01]          <1> 	mov	dl, byte [.ascii + si]
    56                              <1> 
    57 000000F7 8815                <1> 	mov	[di], dl
    58 000000F9 4F                  <1> 	dec	di
    59                              <1> 
    60 000000FA 83F800              <1> 	cmp	ax, 0
    61 000000FD E0ED                <1> 	loopnz	.30L
    62                              <1> .30E:
    63                              <1> 
    64                              <1> 	; 空欄を埋める
    65 000000FF 83F900              <1> 	cmp	cx, 0
    66 00000102 740F                <1> .40Q:	je	.40E
    67 00000104 F6460C04            <1> 	test	[bp + 12], byte 0b0100
    68 00000108 7404                <1> 	jz	.42Q
    69 0000010A B030                <1> 	mov	al, byte '0'
    70 0000010C EB02                <1> 	jmp	.42E
    71 0000010E B020                <1> .42Q:	mov	al, byte ' '
    72                              <1> .42E:
    73 00000110 FD                  <1> 	std
    74 00000111 F3AA                <1> 	rep stosb
    75                              <1> .40E:
    76                              <1> 
    77                              <1> 	; レジスタの復帰
    78 00000113 5F                  <1> 	pop	di
    79 00000114 5E                  <1> 	pop	si
    80 00000115 5A                  <1> 	pop	dx
    81 00000116 59                  <1> 	pop	cx
    82 00000117 5B                  <1> 	pop	bx
    83 00000118 58                  <1> 	pop	ax
    84                              <1> 
    85                              <1> 	; スタックフレームの破棄
    86 00000119 89EC                <1> 	mov	sp, bp
    87 0000011B 5D                  <1> 	pop	bp
    88                              <1> 
    89 0000011C C3                  <1> 	ret
    90                              <1> 
    91 0000011D 303132333435363738- <1> .ascii	db	"0123456789ABCDEF", 0	; 変換テーブル
    91 00000126 3941424344454600    <1>
    47                                  %include	"../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 	; メッセージを表示
     3 0000012E 68[4A01]E856FF83C4- <1> 	cdecl	puts, .s0
     3 00000136 02                  <1>
     4                              <1> 
     5                              <1> 	; キー入力待ち
     6                              <1> .10L:
     7 00000137 B400                <1> 	mov	ah, 0
     8 00000139 CD16                <1> 	int	0x16		; キーボード読み取り
     9                              <1> 
    10 0000013B 3C20                <1> 	cmp	al, ' '		; AL = 読み取り結果のASCIIコード
    11 0000013D 75F8                <1> 	jne	.10L
    12                              <1> 	
    13                              <1> 	; 改行を出力
    14 0000013F 68[6801]E845FF83C4- <1> 	cdecl	puts, .s1
    14 00000147 02                  <1>
    15                              <1> 
    16                              <1> 	; 再起動
    17 00000148 CD19                <1> 	int	0x19
    18                              <1> 
    19                              <1> 	; 文字列データ
    20 0000014A 0A0D50757368205350- <1> .s0:	db 0x0A, 0x0D, "Push SPACE key to reboot...", 0
    20 00000153 414345206B65792074- <1>
    20 0000015C 6F207265626F6F742E- <1>
    20 00000165 2E2E00              <1>
    21 00000168 0A0D0A0D00          <1> .s1:	db 0x0A, 0x0D, 0x0A, 0x0D, 0
    48                                  
    49                                  ; ブートフラグ
    50 0000016D 00<rept>                	times 510 - ($ - $$) db 0x00
    51 000001FE 55AA                    	db 0x55, 0xAA
