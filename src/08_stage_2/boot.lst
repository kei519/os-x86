     1                                  	BOOT_LOAD	equ	0x7C00		; ブートプログラムのロード位置
     2                                  
     3                                  	ORG	BOOT_LOAD
     4                                  
     5                                  ; マクロ
     6                                  %include	"../include/macro.s"
     1                              <1> ; Cの関数風に呼び出すマクロ
     2                              <1> %macro	cdecl 1-*.nolist
     3                              <1> 	%rep	%0 - 1
     4                              <1> 		push	%{-1:-1}
     5                              <1> 		%rotate	-1
     6                              <1> 	%endrep
     7                              <1> 	%rotate	-1
     8                              <1> 	call	%1
     9                              <1> 	%if 1 < %0
    10                              <1> 		add	sp, (__BITS__ >> 3) * (%0 - 1)
    11                              <1> 	%endif
    12                              <1> %endmacro
    13                              <1> 
    14                              <1> struc drive
    15 00000000 <res 00000002>      <1> 	.no	resw	1		; ドライブ番号
    16 00000002 <res 00000002>      <1> 	.cyln	resw	1		; シリンダ
    17 00000004 <res 00000002>      <1> 	.head	resw	1		; ヘッド
    18 00000006 <res 00000002>      <1> 	.sect	resw	1		; セクタ
    19                              <1> endstruc
     7                                  
     8                                  ; エントリポイント
     9                                  entry:
    10                                  	;BPM (Boot Parameter Block)
    11 00000000 EB58                    	jmp	ipl
    12 00000002 90<rept>                	times	90 - ($ - $$) db 0x90
    13                                  
    14                                  	;IPL (Initial Program Loader)
    15                                  ipl:
    16 0000005A FA                      	cli					; 割り込み禁止
    17                                  
    18 0000005B B80000                  	mov	ax, 0
    19 0000005E 8ED8                    	mov	ds, ax
    20 00000060 8EC0                    	mov	es, ax
    21 00000062 8ED0                    	mov	ss, ax
    22 00000064 BC007C                  	mov	sp, BOOT_LOAD
    23                                  
    24 00000067 FB                      	sti					; 割り込み許可
    25                                  
    26 00000068 8816[B600]              	mov	[BOOT.DRIVE], dl
    27                                  
    28                                  	; 文字列を表示
    29 0000006C 68[9600]E8460083C4-     	cdecl	puts, .s0
    29 00000074 02                 
    30                                  
    31                                  	; 次の512バイトを読み込む
    32 00000075 B402                    	mov	ah, 0x02			; AH = 読み込み命令
    33 00000077 B001                    	mov	al, 1				; AL = 読み込みセクタ
    34 00000079 B90200                  	mov	cx, 0x0002			; CX = シリンダ / セクタ
    35 0000007C 8A16[B600]              	mov	dl, [BOOT.DRIVE]		; DL[0:6] = ドライブ番号
    36 00000080 BB007E                  	mov	bx, BOOT_LOAD + 0x200		; ES:BX = 読み込みオフセット
    37 00000083 CD13                    	int	0x13				; if (CF = BIOS(0x13, ah)) {
    38 00000085 730C                    .10Q:	jnc	.10E				; {
    39 00000087 68[A300]E82B0083C4-     .10T:	cdecl	puts, .e0			;   puts(.e0);
    39 0000008F 02                 
    40 00000090 E84400                  	call	reboot				;   reboot();  // 再起動
    41                                  .10E:						; }
    42                                  	; 次のステージへ移行
    43 00000093 E96A01                  	jmp	stage_2				; ブート処理の第2ステージ
    44                                  
    45                                  	; データ
    46 00000096 426F6F74696E672E2E-     .s0	db	"Booting...", 0x0A, 0x0D, 0
    46 0000009F 2E0A0D00           
    47 000000A3 4572726F723A207365-     .e0	db	"Error: sector read", 0
    47 000000AC 63746F722072656164-
    47 000000B5 00                 
    48                                  
    49                                  ALIGN 2, db 0
    50                                  BOOT:						; ブートドライブに関する情報
    51 000000B6 0000                    .DRIVE		dw 0				; ドライブ番号
    52                                  
    53                                  ; モジュール
    54                                  %include	"../modules/real/puts.s"
     1                              <1> puts:	; void puts(str)
     2                              <1> 	; スタックフレームの構築
     3 000000B8 55                  <1> 	push	bp
     4 000000B9 89E5                <1> 	mov	bp, sp
     5                              <1> 
     6                              <1> 	; レジスタの保存
     7 000000BB 50                  <1> 	push	ax
     8 000000BC 53                  <1> 	push	bx
     9 000000BD 56                  <1> 	push	si
    10                              <1> 
    11                              <1> 	; 引数を取得
    12 000000BE 8B7604              <1> 	mov	si, [bp + 4]
    13                              <1> 
    14                              <1> 	; 処理の開始
    15 000000C1 B40E                <1> 	mov	ah, 0x0E		; テレタイプ式1文字出力
    16 000000C3 BB0000              <1> 	mov	bx, 0x0000		; ページ番号と文字色を0に設定
    17 000000C6 FC                  <1> 	cld				; DF(Direction Flag) = 0	ストリング命令で加算
    18                              <1> .10L:
    19 000000C7 AC                  <1> 	lodsb				; al = [si]; si++;
    20                              <1> 
    21 000000C8 3C00                <1> 	cmp	al, 0
    22 000000CA 7404                <1> 	je	.10E
    23                              <1> 
    24 000000CC CD10                <1> 	int	0x10
    25 000000CE EBF7                <1> 	jmp	.10L
    26                              <1> .10E:
    27                              <1> 
    28                              <1> 	; レジスタの復帰
    29 000000D0 5E                  <1> 	pop	si
    30 000000D1 5B                  <1> 	pop	bx
    31 000000D2 58                  <1> 	pop	ax
    32                              <1> 
    33                              <1> 	; スタックフレームの破棄
    34 000000D3 89EC                <1> 	mov	sp, bp
    35 000000D5 5D                  <1> 	pop	bp
    36                              <1> 
    37 000000D6 C3                  <1> 	ret
    55                                  %include	"../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 	; メッセージを表示
     3 000000D7 68[F300]E8DBFF83C4- <1> 	cdecl	puts, .s0
     3 000000DF 02                  <1>
     4                              <1> 
     5                              <1> 	; キー入力待ち
     6                              <1> .10L:
     7 000000E0 B400                <1> 	mov	ah, 0
     8 000000E2 CD16                <1> 	int	0x16		; キーボード読み取り
     9                              <1> 
    10 000000E4 3C20                <1> 	cmp	al, ' '		; AL = 読み取り結果のASCIIコード
    11 000000E6 75F8                <1> 	jne	.10L
    12                              <1> 	
    13                              <1> 	; 改行を出力
    14 000000E8 68[1101]E8CAFF83C4- <1> 	cdecl	puts, .s1
    14 000000F0 02                  <1>
    15                              <1> 
    16                              <1> 	; 再起動
    17 000000F1 CD19                <1> 	int	0x19
    18                              <1> 
    19                              <1> 	; 文字列データ
    20 000000F3 0A0D50757368205350- <1> .s0:	db 0x0A, 0x0D, "Push SPACE key to reboot...", 0
    20 000000FC 414345206B65792074- <1>
    20 00000105 6F207265626F6F742E- <1>
    20 0000010E 2E2E00              <1>
    21 00000111 0A0D0A0D00          <1> .s1:	db 0x0A, 0x0D, 0x0A, 0x0D, 0
    56                                  
    57                                  ; ブートフラグ
    58 00000116 00<rept>                	times 510 - ($ - $$) db 0x00
    59 000001FE 55AA                    	db 0x55, 0xAA
    60                                  
    61                                  ; ブート処理の第2ステージ
    62                                  stage_2:
    63                                  	; 文字列表示
    64 00000200 68[0B02]E8B2FE83C4-     	cdecl	puts, .s0
    64 00000208 02                 
    65                                  
    66                                  	; 処理の終了
    67 00000209 EBFE                    	jmp	$				; 無限ループ
    68                                  
    69                                  	; データ
    70 0000020B 326E64207374616765-     .s0	db "2nd stage...", 0x0A, 0x0D, 0
    70 00000214 2E2E2E0A0D00       
    71                                  
    72                                  ; パディング（このファイルは8Kバイトとする）
    73 0000021A 00<rept>                	times (0x400 * 8) - ($ - $$)	db 0
